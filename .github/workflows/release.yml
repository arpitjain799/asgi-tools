name: publish

on:
  workflow_run:
    workflows: [tests]
    branches: [master]
    types: [completed]

jobs:

  # We have to repeat https://github.com/actions/toolkit/issues/501
  cythonize:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 5

    - uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - uses: actions/cache@v2.1.5
      id: cache-c
      with:
        path: asgi_tools/*.c
        key: ${{ hashFiles('asgi_tools/forms.pyx', 'asgi_tools/multipart.pxd', 'asgi_tools/multipart.pyx') }}

    - name: Cythonize the package
      run: |
        pip install cython --install-option="--no-cython-compile"
        cython asgi_tools/forms.pyx
        cython asgi_tools/multipart.pyx
      if: steps.cache-c.outputs.cache-hit != 'true'

    - uses: actions/upload-artifact@v2
      with:
        name: asgi_tools
        path: asgi_tools/*.c

    - name: Build sdist
      run: python3 setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  build:
    runs-on: ${{ matrix.os }}
    needs: cythonize
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 5

    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/download-artifact@v2
      with:
        name: asgi_tools
        path: asgi_tools

    - name: Build wheels (macos, windows)
      run: python3 setup.py bdist_wheel
      if: matrix.os != 'ubuntu-latest'

    - name: Build wheels (linux)
      if: matrix.os == 'ubuntu-latest'
      uses: docker://quay.io/pypa/manylinux1_x86_64
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      with:
        entrypoint: /github/workspace/.github/workflows/build-manylinux.sh

    - name: Test wheels
      if: |
        !startsWith(matrix.os, 'windows')
      run: pip3 install --pre asgi_tools -f "file:///${GITHUB_WORKSPACE}/dist"

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download a distribution artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypy }}
